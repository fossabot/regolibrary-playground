{"version":3,"file":"static/js/561.8889338c.chunk.js","mappings":"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","sources":["components/jsonSchemaSupport.jsx","components/editor.tsx"],"sourcesContent":["import { monaco } from 'react-monaco-editor';\r\nimport { setDiagnosticsOptions } from 'monaco-yaml';\r\nimport Schema from './bin/k8s-schema.json'\r\n\r\nconst init = () => {\r\n    // Setup workers\r\n    window.MonacoEnvironment = {\r\n        getWorker(moduleId, label) {\r\n            switch (label) {\r\n                case 'editorWorkerService':\r\n                    return new Worker(new URL('monaco-editor/esm/vs/editor/editor.worker', import.meta.url));\r\n                case 'json':\r\n                    return new Worker(\r\n                        new URL('monaco-editor/esm/vs/language/json/json.worker', import.meta.url),\r\n                    );\r\n                case 'yaml':\r\n                    return new Worker(new URL('monaco-yaml/yaml.worker', import.meta.url));\r\n                default:\r\n                    throw new Error(`Unknown label ${label}`);\r\n            }\r\n        },\r\n    };\r\n\r\n    // Json k8s json shcema\r\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\r\n        validate: true,\r\n        schemas: [\r\n            {\r\n                fileMatch: [\"*\"],\r\n                uri: 'k8s-schema',\r\n                schema: Schema\r\n            }\r\n        ],\r\n    });\r\n\r\n    // yaml k8s json shcema \r\n    setDiagnosticsOptions({\r\n        isKubernetes: true,\r\n        schemas: [\r\n            {\r\n                fileMatch: [\"*\"],\r\n                uri: 'http://example.com/k8s-schema.json', // In yaml for some reason it must be a valid http url\r\n                schema: Schema\r\n            }\r\n        ],\r\n    });\r\n};\r\n\r\n\r\nexport default init;","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Paper from \"@mui/material/Paper\";\nimport FlipIcom from '@mui/icons-material/Flip';\nimport Fab from '@mui/material/Fab';\nimport PropTypes from 'prop-types';\nimport * as jsyaml from 'js-yaml';\nimport MonacoEditor, { MonacoDiffEditor } from 'react-monaco-editor';\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\nimport Chip from '@mui/material/Chip';\nimport init from './jsonSchemaSupport'\n\ninit();\n\n\nfunction LanguageSelect({ options, value, onChange }) {\n    const [val, setValue] = React.useState(value);\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n        onChange(event.target.value);\n    };\n\n    const items = options.map((option) => {\n        return <MenuItem value={option} key={option}>{option}</MenuItem>\n    });\n    return (\n        <Box sx={{ minWidth: 120 }}>\n            <FormControl >\n                <InputLabel id=\"input-format-select-label\">Format</InputLabel>\n                <Select\n                    labelId=\"input-format-select-label\"\n                    id=\"input-format-select\"\n                    value={val}\n                    label=\"Format\"\n                    onChange={handleChange}\n                >\n                    {items}\n                </Select>\n            </FormControl>\n        </Box>\n    );\n}\n\n\nLanguageSelect.propTypes = {\n    options: PropTypes.array.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    sx: PropTypes.object,\n}\n\nLanguageSelect.defaultProps = {\n    sx: {\n        width: 120,\n        flex: 1,\n    },\n}\n\nCodeEditor.propTypes = {\n    lang: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onExec: PropTypes.func,\n    value: PropTypes.any.isRequired,\n    fix: PropTypes.any,\n    onApplyChange: PropTypes.func,\n}\n\nCodeEditor.defaultProps = {\n    lang: \"yaml\",\n    value: {\n        \"apiVersion\": \"v1\",\n        \"kind\": \"Pod\",\n        \"metadata\": {\n            \"name\": \"frontend\"\n        },\n        \"spec\": {\n            \"containers\": [\n                {\n                    \"name\": \"app\",\n                    \"image\": \"images.my-company.example/app:v4\",\n                    \"resources\": {\n                        \"requests\": {\n                            \"memory\": \"64Mi\",\n                            \"cpu\": \"250m\"\n                        },\n                        \"limits\": {\n                            \"memory\": \"128Mi\",\n                            \"cpu\": \"500m\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"log-aggregator\",\n                    \"image\": \"images.my-company.example/log-aggregator:v6\",\n                    \"resources\": {\n                        \"limits\": {\n                            \"memory\": \"128Mi\"\n                        }\n                    }\n                }\n            ]\n        }\n    },\n    onChange: () => { },\n    onExec: null,\n    onApplyChange: () => { },\n}\n\nfunction CodeEditor({ onExec, onChange, value, fixed, lang, status, onApplyChanges }) {\n    const decode = (code) => {\n        if (language === \"json\") {\n            return JSON.parse(code);\n        }\n        if (language === \"yaml\") {\n            return jsyaml.load(code);\n        }\n    }\n\n    const encode = (code, lang) => {\n        if (lang === \"json\") {\n            return JSON.stringify(code, null, 2);\n        }\n        if (lang === \"yaml\") {\n            return jsyaml.dump(code);\n        }\n    }\n\n    const [code, setCode] = React.useState(encode(value, lang));\n    const [fix, setFix] = React.useState(null);\n    const [language, setLanguage] = React.useState(lang);\n    const [diffSideBySide, setDiffSideBySide] = React.useState(true); // TODO: add a button\n\n    if (fixed && !fix) {\n        setFix(encode(fixed, language));\n    }\n\n    // language selection buttons\n    const languages = [\n        \"json\",\n        \"yaml\",\n    ];\n\n    // language selection handler\n    const handleLanguageChange = (value) => {\n        console.log(\"changing lang from\", language, \"to\", value);\n        try {\n            setCode(encode(decode(code), value));\n            if (fix) {\n                setFix(encode(decode(fix), value));\n            }\n        } catch (e) {\n            console.log(e);\n        }\n        setLanguage(value);\n    };\n\n    // Excute button handler\n    const handleExcute = () => {\n        if (onExec == null) {\n            return;\n        }\n        if (fix) {\n            onExec(decode(fix));\n        } else {\n            onExec(decode(code));\n        }\n    };\n\n    var editor = <div></div>;\n    const monacoOptions = {\n        automaticLayout: true,\n        scrollBeyondLastLine: false,\n        minimap: {\n            enabled: false,\n        },\n    }\n\n    const diffOptions = {\n        ...monacoOptions,\n        renderSideBySide: diffSideBySide,\n    }\n    if (!fix) {\n        editor = <MonacoEditor\n            height=\"70vh\"\n            width=\"45vw\"\n            language={language}\n            value={code}\n            options={monacoOptions}\n            onChange={(value) => setCode(value)}\n        />\n    } else {\n        editor = <MonacoDiffEditor\n            height=\"70vh\"\n            width=\"45vw\"\n            value={fix}\n            original={code}\n            language={language}\n            options={diffOptions}\n            onChange={(value) => setFix(value)}\n        />\n    }\n\n    var actionButton = (\n        <Fab disabled={onExec == null} color=\"primary\" aria-label=\"exec\" >\n            <FlipIcom onClick={() => handleExcute()} />\n        </Fab>\n    )\n\n    if (fix) {\n        actionButton = (\n            <Fab color=\"success\" aria-label=\"exec\" >\n                <DoneAllIcon onClick={() => {\n                    setCode(fix);\n                    setFix(null);\n                    onApplyChanges(decode(fix));\n                }} />\n            </Fab>\n        )\n    }\n\n    var statusBadge = <div></div>;\n    if (status) {\n        var color = \"warning\"\n        if (status === \"Pass\") { color = \"success\" }\n        if (status === \"Fail\") { color = \"error\" }\n        statusBadge = <Chip label={status} color={color} />\n    }\n\n    return (\n        <Paper\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n                p: 2,\n                height: \"100%\",\n                boxShadow: 10,\n            }}\n        >\n            <Box >\n                {editor}\n            </Box>\n            <Box\n                sx={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    paddingTop:2\n                }}\n            >\n                <LanguageSelect\n                    options={languages}\n                    value={lang}\n                    onChange={handleLanguageChange}\n                />\n                {statusBadge}\n                {actionButton}\n            </Box>\n        </Paper>\n    );\n}\n\n\n\nexport default CodeEditor;"],"names":["window","MonacoEnvironment","getWorker","moduleId","label","Worker","URL","Error","monaco","validate","schemas","fileMatch","uri","schema","Schema","setDiagnosticsOptions","isKubernetes","LanguageSelect","options","value","onChange","React","val","setValue","items","map","option","MenuItem","Box","sx","minWidth","FormControl","InputLabel","id","Select","labelId","event","target","CodeEditor","onExec","fixed","lang","status","onApplyChanges","decode","code","language","JSON","parse","jsyaml","encode","stringify","setCode","fix","setFix","setLanguage","diffSideBySide","editor","monacoOptions","automaticLayout","scrollBeyondLastLine","minimap","enabled","diffOptions","renderSideBySide","height","width","original","actionButton","Fab","disabled","color","Flip","onClick","DoneAll","statusBadge","Chip","Paper","display","flexDirection","justifyContent","p","boxShadow","alignItems","paddingTop","console","log","e","init","defaultProps","flex","onApplyChange"],"sourceRoot":""}