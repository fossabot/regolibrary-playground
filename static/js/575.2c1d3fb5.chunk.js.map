{"version":3,"file":"static/js/575.2c1d3fb5.chunk.js","mappings":"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","sources":["components/editor.tsx"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Paper from \"@mui/material/Paper\";\nimport FlipIcom from '@mui/icons-material/Flip';\nimport Fab from '@mui/material/Fab';\nimport PropTypes from 'prop-types';\nimport * as jsyaml from 'js-yaml';\nimport MonacoEditor, { MonacoDiffEditor } from 'react-monaco-editor';\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\nimport Chip from '@mui/material/Chip';\n\n\nfunction LanguageSelect({ options, value, onChange }) {\n    const [val, setValue] = React.useState(value);\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n        onChange(event.target.value);\n    };\n\n    const items = options.map((option) => {\n        return <MenuItem value={option} key={option}>{option}</MenuItem>\n    });\n    return (\n        <Box sx={{ minWidth: 120 }}>\n            <FormControl >\n                <InputLabel id=\"input-format-select-label\">Format</InputLabel>\n                <Select\n                    labelId=\"input-format-select-label\"\n                    id=\"input-format-select\"\n                    value={val}\n                    label=\"Format\"\n                    onChange={handleChange}\n                >\n                    {items}\n                </Select>\n            </FormControl>\n        </Box>\n    );\n}\n\n\nLanguageSelect.propTypes = {\n    options: PropTypes.array.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    sx: PropTypes.object,\n}\n\nLanguageSelect.defaultProps = {\n    sx: {\n        width: 120,\n        flex: 1,\n    },\n}\n\nCodeEditor.propTypes = {\n    lang: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onExec: PropTypes.func,\n    value: PropTypes.any.isRequired,\n    fix: PropTypes.any,\n    onApplyChange: PropTypes.func,\n}\n\nCodeEditor.defaultProps = {\n    lang: \"yaml\",\n    value: {\n        \"apiVersion\": \"v1\",\n        \"kind\": \"Pod\",\n        \"metadata\": {\n            \"name\": \"frontend\"\n        },\n        \"spec\": {\n            \"containers\": [\n                {\n                    \"name\": \"app\",\n                    \"image\": \"images.my-company.example/app:v4\",\n                    \"resources\": {\n                        \"requests\": {\n                            \"memory\": \"64Mi\",\n                            \"cpu\": \"250m\"\n                        },\n                        \"limits\": {\n                            \"memory\": \"128Mi\",\n                            \"cpu\": \"500m\"\n                        }\n                    }\n                },\n                {\n                    \"name\": \"log-aggregator\",\n                    \"image\": \"images.my-company.example/log-aggregator:v6\",\n                    \"resources\": {\n                        \"limits\": {\n                            \"memory\": \"128Mi\"\n                        }\n                    }\n                }\n            ]\n        }\n    },\n    onChange: () => { },\n    onExec: null,\n    onApplyChange: () => { },\n}\n\nfunction CodeEditor({ onExec, onChange, value, fixed, lang, status, onApplyChanges }) {\n    const decode = (code) => {\n        if (language === \"json\") {\n            return JSON.parse(code);\n        }\n        if (language === \"yaml\") {\n            return jsyaml.load(code);\n        }\n    }\n\n    const encode = (code, lang) => {\n        if (lang === \"json\") {\n            return JSON.stringify(code, null, 2);\n        }\n        if (lang === \"yaml\") {\n            return jsyaml.dump(code);\n        }\n    }\n\n    const [code, setCode] = React.useState(encode(value, lang));\n    const [fix, setFix] = React.useState(null);\n    const [language, setLanguage] = React.useState(lang);\n    const [diffSideBySide, setDiffSideBySide] = React.useState(true); // TODO: add a button\n\n    if (fixed && !fix) {\n        setFix(encode(fixed, language));\n    }\n\n    // language selection buttons\n    const languages = [\n        \"json\",\n        \"yaml\",\n    ];\n\n    // language selection handler\n    const handleLanguageChange = (value) => {\n        console.log(\"changing lang from\", language, \"to\", value);\n        try {\n            setCode(encode(decode(code), value));\n            if (fix) {\n                setFix(encode(decode(fix), value));\n            }\n        } catch (e) {\n            console.log(e);\n        }\n        setLanguage(value);\n    };\n\n    // Excute button handler\n    const handleExcute = () => {\n        if (onExec == null) {\n            return;\n        }\n        if (fix) {\n            onExec(decode(fix));\n        } else {\n            onExec(decode(code));\n        }\n    };\n\n    var editor = <div></div>;\n    const monacoOptions = {\n        automaticLayout: true,\n        scrollBeyondLastLine: false,\n        minimap: {\n            enabled: false,\n        },\n    }\n\n    const diffOptions = {\n        ...monacoOptions,\n        renderSideBySide: diffSideBySide,\n    }\n    if (!fix) {\n        editor = <MonacoEditor\n            height=\"70vh\"\n            width=\"45vw\"\n            language={language}\n            value={code}\n            options={monacoOptions}\n            onChange={(value) => setCode(value)}\n        />\n    } else {\n        editor = <MonacoDiffEditor\n            height=\"70vh\"\n            width=\"45vw\"\n            value={fix}\n            original={code}\n            language={language}\n            options={diffOptions}\n            onChange={(value) => setFix(value)}\n        />\n    }\n\n    var actionButton = (\n        <Fab disabled={onExec == null} color=\"primary\" aria-label=\"exec\" >\n            <FlipIcom onClick={() => handleExcute()} />\n        </Fab>\n    )\n\n    if (fix) {\n        actionButton = (\n            <Fab color=\"success\" aria-label=\"exec\" >\n                <DoneAllIcon onClick={() => {\n                    setCode(fix);\n                    setFix(null);\n                    onApplyChanges(decode(fix));\n                }} />\n            </Fab>\n        )\n    }\n\n    var statusBadge = <div></div>;\n    if (status) {\n        var color = \"warning\"\n        if (status === \"Pass\") { color = \"success\" }\n        if (status === \"Fail\") { color = \"error\" }\n        statusBadge = <Chip label={status} color={color} />\n    }\n\n    return (\n        <Paper\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n                p: 2,\n                height: \"100%\",\n                boxShadow: 10,\n            }}\n        >\n            <Box >\n                {editor}\n            </Box>\n            <Box\n                sx={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    paddingTop:2\n                }}\n            >\n                <LanguageSelect\n                    options={languages}\n                    value={lang}\n                    onChange={handleLanguageChange}\n                />\n                {statusBadge}\n                {actionButton}\n            </Box>\n        </Paper>\n    );\n}\n\n\n\nexport default CodeEditor;"],"names":["LanguageSelect","options","value","onChange","React","val","setValue","items","map","option","sx","minWidth","id","labelId","label","event","target","CodeEditor","onExec","fixed","lang","status","onApplyChanges","decode","code","language","JSON","parse","jsyaml","encode","stringify","setCode","fix","setFix","setLanguage","diffSideBySide","editor","monacoOptions","automaticLayout","scrollBeyondLastLine","minimap","enabled","diffOptions","renderSideBySide","height","width","original","actionButton","disabled","color","onClick","statusBadge","display","flexDirection","justifyContent","p","boxShadow","alignItems","paddingTop","console","log","e","defaultProps","flex","onApplyChange"],"sourceRoot":""}